################################################################################
# These computations are based off of Bernd Schober's notes for chart 66 in 
# August. 
#                                                          Maglione, August 2019
################################################################################

import Zeta
from sage.all import QQ, Polyhedron, PolynomialRing, var
from SingularZeta.src.globalVars import _DEFAULT_p, _DEFAULT_t

p = var(_DEFAULT_p)
t = var(_DEFAULT_t)

# ==============================================================================
# Chart 66:
# ==============================================================================
# ------------------------------------------------------------------------------
# Case: 1
# ------------------------------------------------------------------------------
#                      b n1 n2 n3 n4 n5 n6
P = Polyhedron(ieqs=[( 0, 1, 0, 0, 0, 0, 0),
                     ( 0, 0, 1, 0, 0, 0, 0),
                     ( 0, 0, 0, 1, 0, 0, 0),
                     ( 0, 0, 0, 0, 1, 0, 0),
                     ( 0, 0, 0, 0, 0, 1, 0),
                     ( 0, 0, 0, 0, 0, 0, 1),
                     ( 2,-1, 2, 0, 2, 0, 0),
                     ( 2,-1, 1, 1, 2, 0, 0),
                     ( 0, 0,-1, 2, 0, 0, 0),
                     ( 3,-1, 0, 2, 2, 0, 1)])
R = PolynomialRing(QQ,'x', 6)
sm_1 = Zeta.smurf.SMURF.from_polyhedron(P, R)
factor_1 = (1 - p**-1)**-3*(1 - p**-1)**6*p**-1*t**2*p**-3
zed_1 = sm_1.evaluate()(x0=p**2*t, x1=t, x2=p**-2*t, x3=p**-3*t, x4=t, x5=p**-1)
int_1 = factor_1*zed_1
# Double checked 

# ------------------------------------------------------------------------------
# Case: 2
# ------------------------------------------------------------------------------
#                      b n1 n2 n3 n4 n5 n6
P = Polyhedron(ieqs=[( 0, 1, 0, 0, 0, 0, 0),
                     ( 0, 0, 1, 0, 0, 0, 0),
                     ( 0, 0, 0, 1, 0, 0, 0),
                     ( 0, 0, 0, 0, 1, 0, 0),
                     ( 0, 0, 0, 0, 0, 1, 0),
                     ( 0, 0, 0, 0, 0, 0, 1),
                     ( 1,-1, 2, 0, 1, 0, 0),
                     ( 1,-1, 1, 1, 1, 0, 0),
                     ( 0, 0,-1, 2, 0, 0, 0),
                     ( 2,-1, 0, 2, 1, 0, 1)])
R = PolynomialRing(QQ,'x', 6)
sm_2 = Zeta.smurf.SMURF.from_polyhedron(P, R)
factor_2 = (1 - p**-1)**-3*(1 - p**-1)**6*t*p**-3
zed_2 = sm_2.evaluate()(x0=p**2*t, x1=t, x2=p**-2*t, x3=p**-2, x4=t, x5=p**-1)
int_2 = factor_2*zed_2
# Double checked 

# ------------------------------------------------------------------------------
# Case: 3
# ------------------------------------------------------------------------------
#                      b n1 n2 n3 n4 n5 n6
P = Polyhedron(ieqs=[( 0, 1, 0, 0, 0, 0, 0),
                     ( 0, 0, 1, 0, 0, 0, 0),
                     ( 0, 0, 0, 1, 0, 0, 0),
                     ( 0, 0, 0, 0, 1, 0, 0),
                     ( 0, 0, 0, 0, 0, 1, 0),
                     ( 0, 0, 0, 0, 0, 0, 1),
                     ( 1,-1, 2, 0, 1, 0, 0),
                     ( 0,-1, 1, 1, 0, 0, 0),
                     ( 0, 0,-1, 2, 0, 0, 0),
                     ( 1,-1, 0, 2, 0, 0, 1)])
R = PolynomialRing(QQ,'x', 6)
sm_3 = Zeta.smurf.SMURF.from_polyhedron(P, R)
factor_3 = (1 - p**-1)**-3*(1 - p**-1)**6*p*t*p**-3
zed_3 = sm_3.evaluate()(x0=p**2*t, x1=t, x2=p**-2*t, x3=p**-1, x4=t, x5=p**-1)
int_3 = factor_3*zed_3
# Double checked 

# ------------------------------------------------------------------------------
# Case: 4
# ------------------------------------------------------------------------------
#                      b n1 n2 n3 n4 n5 n6
P = Polyhedron(ieqs=[( 0, 1, 0, 0, 0, 0, 0),
                     ( 0, 0, 1, 0, 0, 0, 0),
                     ( 0, 0, 0, 1, 0, 0, 0),
                     ( 0, 0, 0, 0, 1, 0, 0),
                     ( 0, 0, 0, 0, 0, 1, 0),
                     ( 0, 0, 0, 0, 0, 0, 1),
                     ( 0,-1, 2, 0, 0, 0, 0),
                     ( 0,-1, 1, 1, 0, 0, 0),
                     ( 0, 0,-1, 2, 0, 0, 0),
                     ( 1,-1, 0, 2, 0, 0, 1)])
R = PolynomialRing(QQ,'x', 6)
sm_4 = Zeta.smurf.SMURF.from_polyhedron(P, R)
factor_4 = (1 - p**-1)**-3*(1 - p**-1)**6*(p - 3)*p*t*p**-3
zed_4 = sm_4.evaluate()(x0=p**2*t, x1=t, x2=p**-2*t, x3=p**-1, x4=t, x5=p**-1)
int_4 = factor_4*zed_4
# Double checked 

int_66 = (int_1 + int_2 + int_3 + int_4).simplify().factor().simplify()


################################################################################
#   No cone conditions
################################################################################
# ==============================================================================
# Chart 66:
# ==============================================================================
# ------------------------------------------------------------------------------
# Case: 1
# ------------------------------------------------------------------------------
#                      b n1 n2 n3 n4 n5 n6
P = Polyhedron(ieqs=[( 0, 1, 0, 0, 0, 0, 0),
                     ( 0, 0, 1, 0, 0, 0, 0),
                     ( 0, 0, 0, 1, 0, 0, 0),
                     ( 0, 0, 0, 0, 1, 0, 0),
                     ( 0, 0, 0, 0, 0, 1, 0),
                     ( 0, 0, 0, 0, 0, 0, 1)])
R = PolynomialRing(QQ,'x', 6)
sm_1_cc = Zeta.smurf.SMURF.from_polyhedron(P, R)
zed_1_cc = sm_1_cc.evaluate()(x0=p**2*t, x1=t, x2=p**-2*t, x3=p**-3*t, x4=t, x5=p**-1)
int_1_cc = factor_1*zed_1_cc

# ------------------------------------------------------------------------------
# Case: 2
# ------------------------------------------------------------------------------
#                      b n1 n2 n3 n4 n5 n6
P = Polyhedron(ieqs=[( 0, 1, 0, 0, 0, 0, 0),
                     ( 0, 0, 1, 0, 0, 0, 0),
                     ( 0, 0, 0, 1, 0, 0, 0),
                     ( 0, 0, 0, 0, 1, 0, 0),
                     ( 0, 0, 0, 0, 0, 1, 0),
                     ( 0, 0, 0, 0, 0, 0, 1)])
R = PolynomialRing(QQ,'x', 6)
sm_2_cc = Zeta.smurf.SMURF.from_polyhedron(P, R)
zed_2_cc = sm_2_cc.evaluate()(x0=p**2*t, x1=t, x2=p**-2*t, x3=p**-2, x4=t, x5=p**-1)
int_2_cc = factor_2*zed_2_cc

# ------------------------------------------------------------------------------
# Case: 3
# ------------------------------------------------------------------------------
#                      b n1 n2 n3 n4 n5 n6
P = Polyhedron(ieqs=[( 0, 1, 0, 0, 0, 0, 0),
                     ( 0, 0, 1, 0, 0, 0, 0),
                     ( 0, 0, 0, 1, 0, 0, 0),
                     ( 0, 0, 0, 0, 1, 0, 0),
                     ( 0, 0, 0, 0, 0, 1, 0),
                     ( 0, 0, 0, 0, 0, 0, 1)])
R = PolynomialRing(QQ,'x', 6)
sm_3_cc = Zeta.smurf.SMURF.from_polyhedron(P, R)
zed_3_cc = sm_3_cc.evaluate()(x0=p**2*t, x1=t, x2=p**-2*t, x3=p**-1, x4=t, x5=p**-1)
int_3_cc = factor_3*zed_3_cc

# ------------------------------------------------------------------------------
# Case: 4
# ------------------------------------------------------------------------------
#                      b n1 n2 n3 n4 n5 n6
P = Polyhedron(ieqs=[( 0, 1, 0, 0, 0, 0, 0),
                     ( 0, 0, 1, 0, 0, 0, 0),
                     ( 0, 0, 0, 1, 0, 0, 0),
                     ( 0, 0, 0, 0, 1, 0, 0),
                     ( 0, 0, 0, 0, 0, 1, 0),
                     ( 0, 0, 0, 0, 0, 0, 1)])
R = PolynomialRing(QQ,'x', 6)
sm_4_cc = Zeta.smurf.SMURF.from_polyhedron(P, R)
zed_4_cc = sm_4_cc.evaluate()(x0=p**2*t, x1=t, x2=p**-2*t, x3=p**-1, x4=t, x5=p**-1)
int_4_cc = factor_4*zed_4_cc

int_66_cc = (int_1_cc + int_2_cc + int_3_cc + int_4_cc).simplify().factor().simplify()


################################################################################
#   No cone conditions and no integrand
################################################################################
# ==============================================================================
# Chart 66:
# ==============================================================================
# ------------------------------------------------------------------------------
# Case: 1
# ------------------------------------------------------------------------------
#                      b n1 n2 n3 n4 n5 n6
P = Polyhedron(ieqs=[( 0, 1, 0, 0, 0, 0, 0),
                     ( 0, 0, 1, 0, 0, 0, 0),
                     ( 0, 0, 0, 1, 0, 0, 0),
                     ( 0, 0, 0, 0, 1, 0, 0),
                     ( 0, 0, 0, 0, 0, 1, 0),
                     ( 0, 0, 0, 0, 0, 0, 1)])
R = PolynomialRing(QQ,'x', 6)
sm_1_null = Zeta.smurf.SMURF.from_polyhedron(P, R)
factor_1_null = (1 - p**-1)**6*p**-3*p**-3
zed_1_null = sm_1_null.evaluate()(x0=p**-1, x1=p**-2, x2=p**-3, x3=p**-4, x4=p**-1, x5=p**-1)
int_1_null = factor_1_null*zed_1_null

# ------------------------------------------------------------------------------
# Case: 2
# ------------------------------------------------------------------------------
#                      b n1 n2 n3 n4 n5 n6
P = Polyhedron(ieqs=[( 0, 1, 0, 0, 0, 0, 0),
                     ( 0, 0, 1, 0, 0, 0, 0),
                     ( 0, 0, 0, 1, 0, 0, 0),
                     ( 0, 0, 0, 0, 1, 0, 0),
                     ( 0, 0, 0, 0, 0, 1, 0),
                     ( 0, 0, 0, 0, 0, 0, 1)])
R = PolynomialRing(QQ,'x', 6)
sm_2_null = Zeta.smurf.SMURF.from_polyhedron(P, R)
factor_2_null = (1 - p**-1)**6*p**-1*p**-3
zed_2_null = sm_2_null.evaluate()(x0=p**-1, x1=p**-2, x2=p**-3, x3=p**-2, x4=p**-1, x5=p**-1)
int_2_null = factor_2_null*zed_2_null

# ------------------------------------------------------------------------------
# Case: 3
# ------------------------------------------------------------------------------
#                      b n1 n2 n3 n4 n5 n6
P = Polyhedron(ieqs=[( 0, 1, 0, 0, 0, 0, 0),
                     ( 0, 0, 1, 0, 0, 0, 0),
                     ( 0, 0, 0, 1, 0, 0, 0),
                     ( 0, 0, 0, 0, 1, 0, 0),
                     ( 0, 0, 0, 0, 0, 1, 0),
                     ( 0, 0, 0, 0, 0, 0, 1)])
R = PolynomialRing(QQ,'x', 6)
sm_3_null = Zeta.smurf.SMURF.from_polyhedron(P, R)
factor_3_null = (1 - p**-1)**6*p**-3
zed_3_null = sm_3_null.evaluate()(x0=p**-1, x1=p**-2, x2=p**-3, x3=p**-1, x4=p**-1, x5=p**-1)
int_3_null = factor_3_null*zed_3_null

# ------------------------------------------------------------------------------
# Case: 4
# ------------------------------------------------------------------------------
#                      b n1 n2 n3 n4 n5 n6
P = Polyhedron(ieqs=[( 0, 1, 0, 0, 0, 0, 0),
                     ( 0, 0, 1, 0, 0, 0, 0),
                     ( 0, 0, 0, 1, 0, 0, 0),
                     ( 0, 0, 0, 0, 1, 0, 0),
                     ( 0, 0, 0, 0, 0, 1, 0),
                     ( 0, 0, 0, 0, 0, 0, 1)])
R = PolynomialRing(QQ,'x', 6)
sm_4_null = Zeta.smurf.SMURF.from_polyhedron(P, R)
factor_4_null = (1 - p**-1)**6*(p - 3)*p**-3
zed_4_null = sm_4_null.evaluate()(x0=p**-1, x1=p**-2, x2=p**-3, x3=p**-1, x4=p**-1, x5=p**-1)
int_4_null = factor_4_null*zed_4_null

int_66_null = (int_1_null + int_2_null + int_3_null + int_4_null).simplify().factor().simplify()
